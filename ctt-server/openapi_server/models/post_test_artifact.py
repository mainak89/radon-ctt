# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class POSTTestArtifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_uuid=None, sut_tosca_path=None, sut_inputs_path=None, ti_tosca_path=None, ti_inputs_path=None):  # noqa: E501
        """
        POSTTestArtifact - a model defined in OpenAPI
        """

        self.openapi_types = {
            'project_uuid': str,
            'sut_tosca_path': str,
            'sut_inputs_path': str,
            'ti_tosca_path': str,
            'ti_inputs_path': str
        }

        self.attribute_map = {
            'project_uuid': 'project_uuid',
            'sut_tosca_path': 'sut_tosca_path',
            'sut_inputs_path': 'sut_inputs_path',
            'ti_tosca_path': 'ti_tosca_path',
            'ti_inputs_path': 'ti_inputs_path'
        }

        self._project_uuid = project_uuid
        self._sut_tosca_path = sut_tosca_path
        self._sut_inputs_path = sut_inputs_path
        self._ti_tosca_path = ti_tosca_path
        self._ti_inputs_path = ti_inputs_path

    @classmethod
    def from_dict(cls, dikt) -> 'POSTTestArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The POSTTestArtifact of this POSTTestArtifact.  # noqa: E501
        :rtype: POSTTestArtifact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_uuid(self):
        """Gets the project_uuid of this POSTTestArtifact.


        :return: The project_uuid of this POSTTestArtifact.
        :rtype: str
        """
        return self._project_uuid

    @project_uuid.setter
    def project_uuid(self, project_uuid):
        """Sets the project_uuid of this POSTTestArtifact.


        :param project_uuid: The project_uuid of this POSTTestArtifact.
        :type project_uuid: str
        """
        if project_uuid is None:
            raise ValueError("Invalid value for `project_uuid`, must not be `None`")  # noqa: E501

        self._project_uuid = project_uuid

    @property
    def sut_tosca_path(self):
        """Gets the sut_tosca_path of this POSTTestArtifact.


        :return: The sut_tosca_path of this POSTTestArtifact.
        :rtype: str
        """
        return self._sut_tosca_path

    @sut_tosca_path.setter
    def sut_tosca_path(self, sut_tosca_path):
        """Sets the sut_tosca_path of this POSTTestArtifact.


        :param sut_tosca_path: The sut_tosca_path of this POSTTestArtifact.
        :type sut_tosca_path: str
        """
        if sut_tosca_path is None:
            raise ValueError("Invalid value for `sut_tosca_path`, must not be `None`")  # noqa: E501

        self._sut_tosca_path = sut_tosca_path

    @property
    def ti_tosca_path(self):
        """Gets the ti_tosca_path of this POSTTestArtifact.


        :return: The ti_tosca_path of this POSTTestArtifact.
        :rtype: str
        """
        return self._ti_tosca_path

    @ti_tosca_path.setter
    def ti_tosca_path(self, ti_tosca_path):
        """Sets the ti_tosca_path of this POSTTestArtifact.


        :param ti_tosca_path: The ti_tosca_path of this POSTTestArtifact.
        :type ti_tosca_path: str
        """
        if ti_tosca_path is None:
            raise ValueError("Invalid value for `ti_tosca_path`, must not be `None`")  # noqa: E501

        self._ti_tosca_path = ti_tosca_path

    @property
    def sut_inputs_path(self):
        """Gets the sut_inputs_path of this POSTTestArtifact.


        :return: The sut_inputs_path of this POSTTestArtifact.
        :rtype: str
        """
        return self._sut_inputs_path

    @sut_inputs_path.setter
    def sut_inputs_path(self, sut_inputs_path: str):
        """Sets the ti_tosca_path of this POSTTestArtifact.


        :param sut_inputs_path: The sut_inputs_path of this POSTTestArtifact.
        :type sut_inputs_path: str
        """
        if sut_inputs_path is None:
            raise ValueError("Invalid value for `sut_inputs_path`, must not be `None`")  # noqa: E501

        self._sut_inputs_path = sut_inputs_path

    @property
    def ti_inputs_path(self):
        """Gets the ti_inputs_path of this POSTTestArtifact.


        :return: The ti_inputs_path of this POSTTestArtifact.
        :rtype: str
        """
        return self._ti_inputs_path

    @ti_inputs_path.setter
    def ti_inputs_path(self, ti_inputs_path):
        """Sets the ti_inputs_path of this POSTTestArtifact.


        :param ti_inputs_path: The sut_inputs_path of this POSTTestArtifact.
        :type ti_inputs_path: str
        """
        if ti_inputs_path is None:
            raise ValueError("Invalid value for `ti_inputs_path`, must not be `None`")  # noqa: E501

        self._ti_inputs_path = ti_inputs_path
